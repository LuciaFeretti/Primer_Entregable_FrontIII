{"ast":null,"code":"var _jsxFileName = \"D:\\\\Luli.Documentos\\\\Certified Tech Developer\\\\B6. Frontend III\\\\entregableFinal\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// El componente App es el padre de:\n// - Cabecera\n// - Listado\n// ESTADO: App debe manejar en su estado un número para contabilizar el total de elementos comprados.\n// MÉTODOS: App debe tener un método para aumentar este número y que pueda ser ejecutado por su nieto Item.\n// PROPS: App deberá pasar por props lo necesario a sus componenetes internos.\nimport Cabecera from './components/Cabecera';\nimport Listado from './components/Listado';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const jsonData = require('./data.json');\n\n  const itemsData = JSON.parse(jsonData);\n\n  const getItems = () => itemsData;\n\n  const [comprasTotales, setComprasTotales] = useState(0);\n\n  const sumarCompras = () => {\n    setComprasTotales(+1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Cabecera, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Listado, {\n      data: itemsData,\n      actualizar: sumarCompras\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mJJHfkp/m0TNbAa6+03VibU6uXs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cabecera","Listado","useState","App","jsonData","require","itemsData","JSON","parse","getItems","comprasTotales","setComprasTotales","sumarCompras"],"sources":["D:/Luli.Documentos/Certified Tech Developer/B6. Frontend III/entregableFinal/src/App.js"],"sourcesContent":["// El componente App es el padre de:\n// - Cabecera\n// - Listado\n// ESTADO: App debe manejar en su estado un número para contabilizar el total de elementos comprados.\n// MÉTODOS: App debe tener un método para aumentar este número y que pueda ser ejecutado por su nieto Item.\n// PROPS: App deberá pasar por props lo necesario a sus componenetes internos.\nimport Cabecera from './components/Cabecera'\nimport Listado from './components/Listado'\nimport { useState } from 'react'\n\nfunction App() {\n  const jsonData = require('./data.json');\n  const itemsData = JSON.parse(jsonData);\n  const getItems = () => itemsData\n\n  const [comprasTotales, setComprasTotales] = useState(0)\n\n  const sumarCompras = () => {\n    setComprasTotales( + 1 )\n  }\n\n  return (\n    <div className=\"App\">\n      <Cabecera />\n      <Listado data={itemsData} actualizar={sumarCompras}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;EACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAlB;;EACA,MAAMK,QAAQ,GAAG,MAAMH,SAAvB;;EAEA,MAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,CAAD,CAApD;;EAEA,MAAMU,YAAY,GAAG,MAAM;IACzBD,iBAAiB,CAAE,CAAE,CAAJ,CAAjB;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAS,IAAI,EAAEL,SAAf;MAA0B,UAAU,EAAEM;IAAtC;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAjBQT,G;;KAAAA,G;AAmBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}